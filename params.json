{"name":"Groowin-gradle","tagline":"A Gradle plugin for working with remote WinRM servers.","body":"# groowin-gradle\r\n\r\n## Overview\r\n\r\nThe `groowin-gradle` is a **Gradle** plugin for working with remote **WinRM** (Windows) servers. It allows connecting, executing \r\nremote commands, coping files and directories in a simple and concise way.\r\n\r\nThe plugin was jointly developed by **Aestas/IT** (http://aestasit.com) and **NetCompany A/S** (http://www.netcompany.com/) \r\nto support quickly growing operations and hosting department.\r\n\r\n### Quick example\r\n\r\nThis is a simple example of some **WinRM** features available in the plugin:\r\n\r\n    task remoteTask << {\r\n      remoteManagement {\r\n        exec 'rm -rf /tmp/cache/'\r\n        cp \"$buildDir/cache.content\", '/tmp/cache/cache.content'        \r\n      }\r\n    }\r\n\r\n### Adding plugin to the build\r\n\r\nThe first thing you need to do in order to use the plugin is to define a build script dependency:\r\n\r\n    buildscript {\r\n      repositories { mavenCentral() }\r\n      dependencies {\r\n        classpath 'com.aestasit.infrastructure.groowin:groowin-gradle:0.1.2'\r\n      }\r\n    }\r\n\r\nAnd then apply the plugin:\r\n    \r\n    apply plugin: 'remoteManagement'\r\n\r\nPlugin can be configured with the help of `winrmOptions` structure:\r\n\r\n    winrmOptions {\r\n      ...\r\n    }\r\n\r\nIt also gives access to a set of methods (`remoteManagment`, `exec`, `cp` etc.) defined by **Groowin** - **Groovy WinRM DSL**. \r\n\r\nFor documentation on **WinRM DSL**, please, refer to https://github.com/aestasit/groowin.\r\nâ€ƒ\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}